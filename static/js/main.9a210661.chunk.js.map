{"version":3,"sources":["components/common/Switch.js","serviceWorker.js","scenes/Home.js","components/common/Error404.js","components/common/RedirectAs404.js","index.js"],"names":["bounce","val","spring","stiffness","damping","bounceTransition","atEnter","opacity","scale","rotate","atLeave","atActive","mapStyles","styles","transition","transform","Switch","props","children","className","Boolean","window","location","hostname","match","Home","defaultOptions1","loop","autoplay","animationData","animationData1","rendererSettings","preserveAspectRatio","dots","arrows","options","style","backgroundImage","backgroundSize","height","width","margin","display","padding","maxWidth","textAlign","href","target","color","error404","to","RedirectAs404","Object","assign","state","is404","Root","exact","path","component","ReactDOM","render","Error404","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a210661.chunk.js","sourcesContent":["import React from \"react\";\nimport { spring, AnimatedSwitch } from \"react-router-transition\";\n\nfunction bounce(val) {\n    return spring(val, {\n        stiffness: 330,\n        damping: 22,\n    });\n}\n\nconst bounceTransition = {\n    atEnter: {\n        opacity: 0,\n        scale: 1.2,\n        rotate: 0,\n    },\n    atLeave: {\n        opacity: bounce(1),\n        scale: bounce(1),\n        rotate: 0,\n    },\n    atActive: {\n        opacity: bounce(1),\n        scale: bounce(1),\n        rotate: bounce(0),\n    },\n};\n\nfunction mapStyles(styles) {\n    return {\n        opacity: styles.opacity,\n        transition: `all 180ms linear`,\n        transform: `scale(${styles.scale}) rotate(${styles.rotate}deg)`,\n    };\n}\n\nfunction Switch(props) {\n    const { children } = props;\n    \n    return (\n        <AnimatedSwitch atEnter={bounceTransition.atEnter} atLeave={bounceTransition.atLeave} atActive={bounceTransition.atActive} mapStyles={mapStyles} className=\"route-wrapper\">\n            {children}\n        </AnimatedSwitch>\n    );\n}\n\nexport default Switch;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { FaUsers, FaFacebookF } from \"react-icons/fa\";\nimport Lottie from 'react-lottie';\nimport animationData1 from '../assets/lottie/cooking.json';\n\nfunction Home() {\n    const sliderSettings = {\n        dots: true,\n        arrows: false,\n        autoplay: true\n    }\n\n    const defaultOptions1 = {\n        loop: true,\n        autoplay: true,\n        animationData: animationData1,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid meet'\n        }\n      };\n\n    return (\n        <section className=\"section section-hero section-hero-1 display-fit-screen\">\n            <div className=\"hero-content\">\n                <Slider className=\"el-slider\" {...sliderSettings}>\n                    <div className=\"slide\">\n                        <div className=\"image overlay-image\" >\n                            <Lottie options={defaultOptions1}/>\n                        </div>\n                    </div>\n                </Slider>\n            </div>\n            <div className=\"hero-sidebar overlay-color\">\n                <span className=\"bg-color bg-primary\"></span>\n                <div className=\"display-center\">\n                    <div className=\"content\">\n                        <div className=\"image\" style={{ backgroundImage: `url(/assets/images/logo.png)`, backgroundSize:'cover', height:'124px', width:'217px', margin:'0 auto'}}></div>\n                        <h4 style={{display:'block',margin:'auto',padding:'30px 20px', maxWidth:'480px',textAlign:'center'}}>শীঘ্রই নতুন কিছু নিয়ে আমরা আসছি আপনাদের মাঝে। এই সময়ের জন্য অর্ডার করুন আমাদের ফেসবুক পেজে</h4>\n                        <a href=\"https://www.facebook.com/akharitehari\" target=\"_blank\">\n                            <button className=\"button button-md button-light text-primary\" style={{display:'block',margin:'auto'}}>\n                                <span className=\"wave\"></span>\n                                <span className=\"text\" >অর্ডার করুন</span>\n                            </button>\n                        </a>\n                    </div>\n                </div>\n                <div className=\"hero-sidebar-links\">\n                    <ul>\n                        <li>\n                            <a href=\"https://www.facebook.com/akharitehari\" target=\"_blank\">\n                                <FaFacebookF />\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.facebook.com/groups/568873090456384\" target=\"_blank\">\n                                <FaUsers />\n                            </a>\n                        </li>\n                    </ul>\n                    <p>Powered By <a href=\"http://www.alphabetdev.com/#/\" target=\"_blank\"><span style={{color:'#9fa1bd'}}>alphabetDEV</span></a></p>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction error404() {\n    return (\n        <section className=\"section section-error-404 overlay-image\">\n            <div className=\"display-center\">\n                <div className=\"error-content text-center\">\n                    <h1>404!</h1>\n                    <h3>Page not found</h3>\n                    <p>The page you were looking for could not be found.</p>\n                    <Link to=\"/home\">\n                        <button className=\"button button-lg button-primary\">\n                            <span className=\"wave\"></span>\n                            <span className=\"text\">BACK TO HOMEPAGE</span>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default error404;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction RedirectAs404({ location }) {\n    return <Redirect to={Object.assign({}, location, { state: { is404: true } })} />;\n}\n\nexport default RedirectAs404;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Switch from \"./components/common/Switch\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Stylesheet\nimport \"./index.scss\";\n\n// Scenes\nimport Home from \"./scenes/Home\";\n\n// Components\nimport Error404 from \"./components/common/Error404\";\nimport RedirectAs404 from \"./components/common/RedirectAs404\";\n\nconst Root = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/home\" component={Home} />\n                <Route component={RedirectAs404} />\n            </Switch>\n        </div>\n    );\n};\n\nReactDOM.render(\n    <HashRouter>\n        <div>\n            <Route render={({ location }) => (location.state && location.state.is404 ? <Error404 /> : <Root />)} />\n        </div>\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}